1. 패키지매니저
    a. npm, yarn
    b. 용량문제, 패키지 내려받기 속도문제, 보안문제 관리
    c. npm이 좀더 대중적
    d. 어플리케이션에 의존적인 패키지를 관리(설치, 삭제, 업데이트) 하는 프로그램

2. 빌드 도구 : webpack(웹팩)
    a. 기존 방식
        i. <script></script>
    b. 다양한 모듈 시스템을 지원
        i. ESBuild, Vite(Vite가 트렌드)

3. 개발 도구 : VSCode

4. 웹 프레임워크
    a. 프론트
        i. React, Vue.js, Svelite
    b. 백엔드
        i. Express, NetJS

5. 프로토콜

6. 클라우드
    a. 인터넷 기반으로 제공하는 컴퓨터 환경
    b. laaS, SaaS, PaaS
        i. S는 server를 말한다.

7. 인프라(Infra)
    a. 하드웨어, 소프트웨어, 네트워크 등 어플리케이션 구축에 필요한 자원을 뜻한다.

8. 형상관리시스템
    a. git
        i. 소스코드의 버전관리, 추적, 공동 작업을 지원하는 시스템

9. 풀 리퀘스트(PR)
    a. 코드의 공동 작업 시 소스 코드 수정사항을 공유하기 위한 요청
        i. 관리자는 확인하고 PR을 받아줘야 한다.

10. Node.js
    a. 서버 측 자바스크립트 런타임 환경
    b. 역사 
        i. 2009년 라이언 달 개발자 오픈소스 공개
        ii. 2010년 npm 패키지 매니저 공개
        iii. 2011년 윈도우형 node.js 출시 
        iv. 2012 ~ 2024년 
    c. V8엔진을 사용한다.
    d. 논블러킹/비동기 API 서버 환경을 쉽게 구현하도록 지원한다.
        i. nonblocking : 함수 실행의 완료를 기다리지 않고 다음 코드를 실행하는 것
    e. 동시에 실행되는 스레드와 공유자원을 프로그래머가 직접 만들어 사용하지 않고 이벤트 기반 비동기 환경을 제공한다.
