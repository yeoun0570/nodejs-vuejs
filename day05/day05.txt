SSR (Server Side Rendering)
화면의 렌더링이 서버에서 이루어지는 아키텍처

SPA(Single Page Application)
하나의 페이지를 사용하는 어플리케이션
Ajax( 페이지 새로고침 없이 데이터가 교환되고 업데이트)
사용자와의 상호작용을 위해
사용자 중심 경험(User-centric Experience)을 제공하기 위해
웹프레임워크를 사용한다.

프레임워크를 사용하면 우리는 무엇이 이득인가?
일반 작업이나 공통 패턴을 추상화 해서 제공하기 때문에
빠르고 정확하게 원하는 앱을 구현하고 운영 및 유지 보수가 가능하다.

Vue.js 란?
데이터를 보여주는 뷰(view)
데이터를 중개하는 뷰모델 (view-model)
UI와 데이터 처리 로직의 상호 의존성을 줄이는 패턴인 MVVM 적용 하여
뷰, 뷰모델, 모델을 독립적으로 모듈화하여 재사용성을 높일 수 있는
애플리케이션을 설계할 수 있다.

데이터를 처리하는 모델(model)
sudo npm install -g @vue/cli
뷰 어플리케이션을 만드는 방법 2가지
- CDN(Content Delivery Network)
  HTML 기반에서 뷰 어플리케이션을 생성할때 유용함
  <script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
- NPM(Node Package Manger)
  npm create vue@latest
  Vue의 최신 버전으로 뷰 프젝젝트를 설정하여 생성하겠다.
  초기 프로젝트를 구성하는 것을 스캐폴딩 (뷰의 뼈대를 세운다.)
CDN, NPM
0. SSR 방식과 SPA 방식의 원리와 차이점
1. Vue.js 정의
2. Vue.js 채택의 이유
3. Vue.js 동작원리와 특징
4. Vue.js 개발환경 설정
   -CDN
   -NPM
=====================================================
1. 뷰 어플리케이션의 기본 구조
    - package.json
      가장 중심이 되는 파일
      뷰 app에서 사용되는 기본 정보, 의존성 모듈 정보, 스크립트 명령어 정보 저장되어 있다.
      {
        "name": "vue-project",  	// 뷰 app 이름
        "version": "0.0.0",     	// [major.minor.patch]
                                    // magor: 하위 호환성이 없는 변경사항이 있을 때 증가
                                    // minor: 하위 호환성이 있는 기능이 추가되거나 변경될 때 증가
                                    // patch: 버그나 작은 수정 사항이 있을 때 증가
        "private": true,        	// 뷰 app의 공개 여부를 의미하는 논리형 값
        "type": "module",
        "scripts": {            	// 뷰 app에서 빌드하거나 실행할 수 있는 명령어를 등록 부분: npm run dev
          "dev": "vite",
          "build": "vite build",
          "preview": "vite preview"
        },
        "dependencies": {       	// 뷰 app을 실행할 때 필요한 의존성 모듈을 정의하는 부분
          "vue": "^3.5.11"
        },
        "devDependencies": {
          "@vitejs/plugin-vue": "^5.1.4",   // 뷰 app 개발할 때 필요한 의존성 모듈을 정의한 부분	npm install 패키지명 [--save --save-dev]
          "vite": "^5.4.8"
        }
      }
=====================================================
    - index.HTML
      npm run dev 명령어를 입력하면 개발 서버가 구동이 된다.
      개발 서버가 구동이 되면서 가장 먼저 index.html을 서버에 load한다.
    - main.js
=====================================================
    - App.vue
      확장자가 vue인 파일을 뷰에서는 SFC(Single File Component), 컴포넌트(Component)
      뷰 app은 컴포넌트들을 여러개 생성하면서 어플리케이션을 만든다.
      App.vue는 이들의 루트(root) 컴포넌트이다. (최초로 진입하는 가장 상위에 있는 컴포넌트)
=====================================================
2. 뷰 어플리케이션 인스턴스
    a. 뷰 패키지의 구조와 기능을 뷰 어플리케이션에서 사용할 수 있게 하는 진입점 역할을 한다.
    b. 뷰의 근간은 자바스크립트이다.(객체지향언어)

3. App.vue
    a. 뷰는 SFC 기본구조를 가지고있다.
    b. App.vue가 SFC이다.(인스턴스의 구성요소의 설정정보)
    c. 인스턴스를 생성할 때 SFC파일을 main.js의 createApp() 함수의 매개변수로 전달하면 SFC파일의 설정 정보를 가져와서 인스턴스를 생성한다.
    d. <template>태그는 1개 이상 반드시 필요하고 <scrpit>태그와 <style>태그는 선택
        i. <script>
            1. SFC 파일에서 사용할 로직을 자바스크립트로 작성한다.
            2. 문법 규칙 준수해서 작성해야한다.
            3. OPTIONS API를 지켜서 작성해야한다.
        ii. <template>
            1. HTML 코드 작성 영역
            2. node에서의 layout과 비슷한 개념
        iii. <style>
            1. <template> 영역에서 작성한 구성요소에 대해 CSS 스타일을 적용하기 위한 영역


4. 디렉티브 사용하기
  a. <script>태그 영역에서 정의한 data옵션 속성을 <template>태그 영역에서 사용할 수 있게 해줌
  b. 'v-' 접두사로 시작하고 뷰에서만 사용하는 문법이다.
    i. v-html 디렉티브
      1. 데이터에 포함된 HTML태그를 인식해서 렌더링
      2. XSS 공격에 취약하며, 사용자가 입력한 데이터를 출력할 때는 사용하지 말것
    ii. v-text
    iii. v-pre
      1. 컴파일 할 때 <template>영역을 건너뛰게 하는 디렉티브이다.
      2. 뷰는 SFC파일의 <template>태그를 런타임이나 빌드 과정에서 컴파일한다.
      3. 초기 랜더링 성능 향상을 위해 SFC 파일의 <template>태그 영역에 뷰 문법이 사용되지 않으면 컴파일 할 필요가 없으므로 v-pre 디렉티브를 추가해 컴파일을 스킵한다.
    iv. v-bind
      1. HTML 태그의 콘텐츠가 아니라 속성에 데이터를 연결하고 싶을 때 v-gind를 사용해야 한다.
      2. v-bind 디렉티브는 항상 HTML 속성 앞에 : 을 붙여서 표시한다.
      3. HTML 속성과 데이터를 연결할 수 있다.
    v. v-if / v-else-if / v-else
      1. <template>태그 영역 안에서 조건부 렌더링 기능을 구현할 때 사용하는 디렉티브이다.
      2. 조건에 맞지 않는 요소는 아예 렌더링하지 않는다.
      3. 조건이 자주 변경되지 않을 때, v-if가 유리하다.
    vi. v-show
      1. 조건과 상관없이 무조건 렌더링하고 CSS display속성을 none으로 세팅하여 화면에서만 감춘다.
      2. 조건이 자주 변경되는 경우에 유리하다.
    vii. v-cloak
      1. CDN 방식으로 렌더링 할 경우 뷰 적용을 인위적으로 늦추기 위해 setTimeout() 메서드를 이용하여 딜레이 늦춤
    viii. v-for
      1. 뷰에서 반복적으로 렌더링하는 HTML요소를 생성하는데 사용
      2. v-for="값 in 배열" key="고유값"
      3. v-for="(값,인덱스) in 배열" key="고유값"